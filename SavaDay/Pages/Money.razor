@page "/money"
@inject Blazored.LocalStorage.ILocalStorageService localStore

<h1>Money Page LocalStorage</h1>

<table class="table">
    <thead class="thead-light">
        <tr>
            <th>Id</th>
            <th>Tag</th>
            <th>Date</th>
            <th>Amount</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var moneyItem in moneyItems)
        {
            <tr>
                <td>@moneyItem.Id</td>
                <td>@moneyItem.Tag</td>
                <td>@moneyItem.Date</td>
                <td>@moneyItem.Amount</td>
            </tr>
        }
    </tbody>
</table>

<form class="form-check-inline">
    <div class="form-group">
        <input type="number" placeholder="Tx ID" class="form-control" @bind="id" disabled />
    </div>
    <div class="form-group">
        <input type="text" placeholder="Tag" class="form-control" @bind="tag" />
    </div>
    <div class="form-group">
        <input type="text" placeholder="Date" class="form-control" @bind="date" />
    </div>
    <div class="form-group">
        <div class="input-group-prepend">
                    <span class="input-group-text">@(NumberFormatInfo.CurrentInfo.CurrencySymbol)</span>
        <input type="number" placeholder="Amount" class="form-control" @bind="amount" />
        </div>
    </div>
</form>

<br />
<button class="btn btn-primary" @onclick="AddMoneyItem">Add Money Item</button>

<br />
<br />
*** test zone ***
<br />
<br />

<textarea @bind="noteContent" />
<br />
<button class="btn btn-primary" @onclick="UpdateLocalStorage">Save</button>
<button class="btn btn-primary" @onclick="ClearLocalStorage">Clear</button>

@code {
    private List<MoneyItem> moneyItems = new List<MoneyItem>();
    private int id = 0;
    private string tag = string.Empty;
    private string date = string.Empty;
    private double amount = 0.00;

    private void AddMoneyItem()
    {
        MoneyItem newMonItem = new MoneyItem();
        newMonItem.Id = id;
        id++;
        newMonItem.Tag = tag;
        newMonItem.Date = date;
        newMonItem.Amount = amount;

        moneyItems.Add(newMonItem);
    }

    /// <summary>
    /// local storage usage
    /// </summary>
    const string noteKey = "note";
    string noteContent = string.Empty;

    public async void UpdateLocalStorage()
    {
        await localStore.SetItemAsync(noteKey, noteContent);
    }

    public async void ClearLocalStorage()
    {
        noteContent = string.Empty;
        await localStore.ClearAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        noteContent = await localStore.GetItemAsync<string>(noteKey);
    }
}